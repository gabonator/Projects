// Converts assembly generated by Ghidra into compatible format

var fs = require("fs");
const rFunction = "^;undefined (.*)\\(\\)$";
var curfunc = "";

var lines = fs.readFileSync("fox.gasm").toString().split("\n").map(x=>{
  if (x.indexOf(";param_1") != -1)
    return "";

  l = x.substr(28).trim().toLowerCase();

  l = l.split("fun_1020_").join("sub_");
  l = l.split("lab_1020_").join("loc_");

  var m = l.match(rFunction);
  if (m)
  {
    var prefix = "";
//    console.log("function: "+m[1]);
    if (curfunc != "")
      prefix = curfunc + " endp\n\n";
    curfunc = m[1];
    return prefix + curfunc+" proc near";
  }

  if (l.indexOf(";") != -1)
    l = l.substr(0,l.indexOf(";")).trim();
  if (l == "")
    return l;

  var db = l.match("\\?\\?\\s+([0-9A-Fa-f]{2}h)")
  if (db)
    l = "db " + db[1];

  while (l.indexOf("  ") != -1)
    l = l.split("  ").join(" ");
  l = l.split(",").join(", ");


  if (l == "lodsb si")
    l = "lodsb";
  if (l == "lodsw si")
    l = "lodsw";
  if (l == "stosw es:di")
    l = "stosw";
  if (l == "movsw es:di, si")
    l = "movsw";
  if (l == "stosb es:di")
    l = "stosb";
  if (l == "movsb es:di, si")
    l = "movsb";
  if (l == "scasb.repne es:di")
    l = "repne scasb";
  if (l == "stosb.rep es:di")
    l = "rep stosb";
  if (l == "stosw.rep es:di")
    l = "rep stosw";
  if (l == "rol ax")
    l = "rol ax, 1";
  if (l == "xor eax, eax")
    l = "xor ax, ax";
  if (l == "movsw.rep es:di, si")
    l = "rep movsw";
  if (l == "xlat cs:, bx")
    l = "xlat"; // check
  if (l == "xlat es:, bx")
    l = "xlat"; // check
  if (l == "xlat , bx")
    l = "xlat"; // check
  if (l == "scasb es:di")
    l = "scasb";
  if (l == "movsb.rep es:di, si")
    l = "rep movsb";

  l = l.split(" + -").join("-");
  l = l.split(" + ").join("+");


  return l[l.length-1] != ":" ? "  " + l : l;
});


console.log(lines.filter(l=>l.length).join("\n"));

if (curfunc)
    console.log(curfunc+" endp");
/*
                            ;************************************************************************************************
                            ;*                                           FUNCTION                                           *
                            ;************************************************************************************************
                            ;undefined FUN_0100()
ram:0000:0100   bc6206          MOV         SP,0x662                                
ram:0000:0103   33c0            XOR         AX,AX                                   
ram:0000:0105   50              PUSH        AX                                      
ram:0000:0106   8d06bb02        LEA         AX,[0x2bb]                              
ram:0000:010a   50              PUSH        AX                                      
ram:0000:010b   90              NOP                                                  
ram:0000:010c   90              NOP                                                  
ram:0000:010d   90              NOP                                                  
*/