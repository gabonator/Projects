
diff --git a/./cat.cpp b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/goose.cpp
index f768dac..b45ebba 100644
--- a/./cat.cpp
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/goose.cpp
@@ -1,4 +1,5 @@
 #include "cicoemu.h"
+#include <time.h>
 using namespace CicoContext;
 
 void sub_17230();
@@ -470,8 +471,19 @@ loc_17468:
   bx = 0;
 loc_17479:
   bx <<= 1;
-  stop(/*2*/); // (jmp word ptr cs:[bx + 0x250]) jump Indirect memoryAGet16(cs, bx + 592)
-  //   gap of 16 bytes
+    switch (bx)
+    {
+    case 0: goto loc_17612;
+    case 2: goto loc_17612;
+    case 4: goto loc_17689;
+    case 6: goto loc_175c4;
+    case 8: goto loc_17579;
+    case 10: goto loc_1752e;
+    case 12: goto loc_174da;
+    case 14: goto loc_17490;
+    default:
+    assert(0);
+    }
 loc_17490:
   memoryASet16(ds, 0x0004, 0x0007);
   sub_18e20();
@@ -855,20 +867,16 @@ void sub_17863()
     goto loc_1787e;
 loc_17874:
   flags.carry = ah & 1;
-  flags.zero = (ah >> 1) & 1;
-  stop(/*carry1*/);
   memoryASet(ds, bx + 4118, rcr(memoryAGet(ds, bx + 4118), 0x01));
-  ah = flags.carry | (flags.zero << 1);
+  ah = flags.carry;
   bx++;
   if (--cx)
     goto loc_17874;
   return;
 loc_1787e:
   flags.carry = ah & 1;
-  flags.zero = (ah >> 1) & 1;
-  stop(/*carry2*/);
   memoryASet(ds, bx + 4118, rcl(memoryAGet(ds, bx + 4118), 0x01));
-  ah = flags.carry | (flags.zero << 1);
+  ah = flags.carry;
   bx--;
   if (--cx)
     goto loc_1787e;
@@ -884,7 +892,7 @@ void sub_17888()
     goto loc_178a9;
   if (memoryAGet(ds, 0x055c) >= 0x01)
     goto loc_178a4;
-  stop(/*inject ret*/);
+  flags.zero = memoryAGet(ds, 0x055c) == 0x01;
   return;
 loc_178a4:
   memoryASet(ds, 0x04d6, 0x01);
@@ -2076,13 +2084,14 @@ loc_18440:
   if (memoryAGet(ds, 0x069b) != 0x00)
     goto loc_1845e;
   sub_184f1();
-  sub_185e7();
-  dx = ax;
-loc_18453:
-  sub_185e7();
-  ax -= dx;
-  if (ax < 0xf8ed)
-    goto loc_18453;
+    sync();
+//  sub_185e7();
+//  dx = ax;
+//loc_18453:
+//  sub_185e7();
+//  ax -= dx;
+//  if (ax < 0xf8ed)
+//    goto loc_18453;
   return;
 loc_1845e:
   dx = 0x0201;
@@ -2257,14 +2266,21 @@ void sub_185da()
 }
 void sub_185e7()
 {
-  al = 0x00;
-  out(0x0043, al);
-  in(al, 0x40);
-  ah = al;
-  in(al, 0x40);
-  tl = ah;
-  ah = al;
-  al = tl;
+    sync();
+        struct timespec ts;
+        unsigned theTick = 0U;
+        clock_gettime( CLOCK_REALTIME, &ts );
+        theTick  = ts.tv_nsec / 1000000;
+        theTick += ts.tv_sec * 1000;
+    ax = theTick*1193;
+//  al = 0x00;
+//  out(0x0043, al);
+//  in(al, 0x40);
+//  ah = al;
+//  in(al, 0x40);
+//  tl = ah;
+//  ah = al;
+//  al = tl;
 }
 void sub_18608()
 {
@@ -2397,7 +2413,6 @@ loc_1884e:
   if (flags.carry)
     return;
   sub_189dd();
-  stop(/*inject ret*/);
   return;
 loc_18860:
   if (memoryAGet(ds, 0x0550) >= 0x02)
@@ -3757,7 +3772,7 @@ loc_19530:
     goto loc_19557;
   memoryASet(ds, 0x1d58, 0x01);
 loc_19557:
-  stop(/*inject ret*/);
+    return;
 }
 void sub_19560()
 {
@@ -4098,12 +4113,13 @@ void sub_198c0()
   es = pop();
   cx = 0x0007;
   si = 0x1f82;
+loc_198c8:
   lodsb<MemAuto, DirAuto>();
   bx = 0x0007;
   bx -= cx;
   if (--cx && al == memoryAGet(ds, bx + 8073))
     goto loc_198c8;
-  if (stop(/*1*/))
+  if (al > memoryAGet(ds, bx + 8073)) // TODO: check!
     goto loc_198d7;
   return;
 loc_198d7:
@@ -4906,8 +4922,8 @@ void sub_1a02d()
   dx = memoryAGet16(ds, 0x2ae5);
   dl ^= dh;
   dl >>= 1;
+  flags.carry = dl & 1;
   dl >>= 1;
-  stop(/*carry1*/);
   memoryASet16(ds, 0x2ae5, rcr(memoryAGet16(ds, 0x2ae5), 0x0001));
   dx = memoryAGet16(ds, 0x2ae5);
 }
@@ -7173,7 +7189,6 @@ void sub_1b50b()
   sub_1a059();
   bx = pop();
   si = pop();
-  stop(/*inject ret*/);
 }
 // INJECT: Error: cannot inject carry flag in sub_1b52c()!
 void sub_1b52c()
@@ -9898,10 +9913,10 @@ loc_1ce81:
 }
 void sub_1ce90()
 {
-  interrupt(0x11);
-  al &= 0x30;
-  if (al != 0x30)
-    goto loc_1cec5;
+//  interrupt(0x11);
+//  al &= 0x30;
+//  if (al != 0x30)
+//    goto loc_1cec5;
   ax = 0xb800;
   ds = ax;
   ax = 0x55aa;
@@ -10163,6 +10178,7 @@ loc_1d118:
 loc_1d124:
   ax = memoryAGet16(ds, 0x0693);
 loc_1d127:
+    sync();
   if (ax == memoryAGet16(ds, 0x0693))
     goto loc_1d127;
   if (!(memoryAGet(ds, 0x06c1) & 0x80))
@@ -10187,6 +10203,7 @@ loc_1d14f:
 loc_1d156:
   ax = memoryAGet16(ds, 0x0693);
 loc_1d159:
+    sync();
   if (ax == memoryAGet16(ds, 0x0693))
     goto loc_1d159;
   ax = 0;
@@ -10242,6 +10259,7 @@ loc_1d1ce:
 loc_1d1d7:
   ax = memoryAGet16(ds, 0x0693);
 loc_1d1da:
+    sync();
   if (ax == memoryAGet16(ds, 0x0693))
     goto loc_1d1da;
 }
