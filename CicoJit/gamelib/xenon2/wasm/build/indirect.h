
void sub_1f2ff();
void sub_208f9();
void sub_208dc();
void sub_20854();
void sub_1f3b5();
void sub_1f3ae();
void sub_1f3a7();
void sub_1f325();
void sub_1f324();
void sub_1f3d7();
void sub_1f3c7();
void sub_211cc();
void sub_21132();
void sub_21090();
void sub_20f54();
void sub_20d8a();
void sub_20d18();
void sub_20c7b();
void sub_20c5e();
void sub_20be5();
void sub_20b8a();
void sub_20b5b();
void sub_20ad0();
void sub_20a39();
void sub_209e9();
void sub_2098c();
void sub_20708();
void sub_20653();
void sub_205ed();
void sub_205ae();
void sub_205ae();
void sub_205a9();
void sub_2058d();
void sub_20568();
void sub_20482();
void sub_1ebd7();
void sub_1ebd0();
void sub_203da();
void sub_1ff41();
void sub_1fea1();
void sub_1f585();
void sub_1f57c();
void sub_1f492();
void sub_1f3ef();
void sub_1f2ba();
void sub_16284();
void sub_1758f();
void sub_1655b();
void sub_14311();
void sub_14759();
void sub_137df();
void sub_10853();
void sub_10761();
void sub_170f1();
void sub_16eef();
void sub_10761();
void sub_10853();
void sub_10897();
void sub_108b9();
void sub_1091f();
void sub_10ab7();
void sub_10f2b();
void sub_11f4d();
void sub_11fb4();
void sub_11ff3();
void sub_120f7();
void sub_1213c();
void sub_121e9();
void sub_1221a();
void sub_1229b();
void sub_1237e();
void sub_123ed();
void sub_1246d();
void sub_1250b();
void sub_125a8();
void sub_1262d();
void sub_12697();
void sub_128b8();
void sub_128df();
void sub_137df();
void sub_13801();
void sub_13835();
void sub_13872();
void sub_13900();
void sub_13998();
void sub_1399c();
void sub_139ee();
void sub_13a99();
void sub_13aa7();
void sub_13b55();
void sub_13b76();
void sub_13bdf();
void sub_14311();
void sub_14759();
void sub_169c8();
void sub_169d0();
void sub_16a0a();
void sub_16aad();
void sub_16ac7();
void sub_16bca();
void sub_16d22();
void sub_16e2c();
void sub_1714d();
void sub_171dd();
void sub_172c4();
void sub_17520();
void sub_17569();
void sub_17dde();
void sub_17e87();
void sub_1830c();
void sub_183bd();
void sub_185d0();
void sub_1866d();
void sub_18745();
void sub_18783();
void sub_187d5();
void sub_188a9();
void sub_189ae();
void sub_18c3e();
void sub_12ab2();
void sub_12aa4();
void sub_12a48();
void sub_12a66();
void sub_1308c();
void sub_12aca();
void sub_12a6e();
void sub_13246();
void sub_12e84();
void sub_131b6();
void sub_12f08();
void sub_12f7c();
void sub_13126();
void sub_12d86();
void sub_12df0();
void sub_12d2a();
void sub_12b80();
void sub_12ac4();
void sub_12ad0();
void sub_13360();
void sub_135ce();
void sub_1714a();
void sub_172c4();
void sub_17520();
void sub_1480b();
void sub_1ebd0();
void sub_11e61();
void sub_13aa7();
void sub_1714a();
void sub_108b9();
void sub_1ff41();
void sub_13a39();
void sub_10f2b();
void sub_13998();
void sub_128df();
void sub_12a6e();
void sub_12ab2();
void sub_137ca();
void sub_16d22();
void sub_11f4d();
void sub_1308c();
void sub_16a0a();
void sub_125a8();
void sub_13835();
void sub_139ee();
void sub_1091f();
void sub_13a39();
void sub_13b76();
void sub_16aad();
void sub_16696();
void sub_166a6();
void sub_209a6();
void sub_244a3();
void sub_224b0();
void sub_209a6();
void sub_224b0();
void sub_16ac7();
void sub_12ad0();
void sub_18e01();
void sub_128b8();
void sub_17f32();
void sub_18e01();
void sub_18ca7();
void sub_188a9();
void sub_119bc();
void sub_100a4();
void sub_14311();
void sub_103a8();
void sub_189ae();
void sub_18c3e();
void sub_17f79();
void sub_1866d();
void sub_17dde();
void sub_180ca();
void sub_18114();
void sub_18126();
void sub_180f5();
void sub_187d5();
void sub_18783();
void sub_17ce6();
void sub_17bef();
void sub_17ac4();
void sub_17e87();
void sub_185d0();
void sub_13b55();
void sub_1830c();
void sub_18d18();
void sub_183bd();
void sub_184e1();
void sub_18c5f();
void CicoContext::cicocontext_t::callIndirect(int seg, int ofs)
{
    switch (seg*0x10000+ofs)
    {
        case 0x1f29006f: sub_1f2ff(); break;
        case 0x1f291669: sub_208f9(); break;
        case 0x1f29164c: sub_208dc(); break;
        case 0x1f2915c4: sub_20854(); break;
        case 0x1f290125: sub_1f3b5(); break;
        case 0x1f29011e: sub_1f3ae(); break;
        case 0x1f290117: sub_1f3a7(); break;
        case 0x1f290095: sub_1f325(); break;
        case 0x1f290094: sub_1f324(); break;
        case 0x1f290147: sub_1f3d7(); break;
        case 0x1f290137: sub_1f3c7(); break;
        case 0x1f291f3c: sub_211cc(); break;
        case 0x1f291ea2: sub_21132(); break;
        case 0x1f291e00: sub_21090(); break;
        case 0x1f291cc4: sub_20f54(); break;
        case 0x1f291afa: sub_20d8a(); break;
        case 0x1f291a88: sub_20d18(); break;
        case 0x1f2919eb: sub_20c7b(); break;
        case 0x1f2919ce: sub_20c5e(); break;
        case 0x1f291955: sub_20be5(); break;
        case 0x1f2918fa: sub_20b8a(); break;
        case 0x1f2918cb: sub_20b5b(); break;
        case 0x1f291840: sub_20ad0(); break;
        case 0x1f2917a9: sub_20a39(); break;
        case 0x1f291759: sub_209e9(); break;
        case 0x1f2916fc: sub_2098c(); break;
        case 0x1f291478: sub_20708(); break;
        case 0x1f2913c3: sub_20653(); break;
        case 0x1f29135d: sub_205ed(); break;
        case 0x1f29131e: sub_205ae(); break;
        case 0x1f291319: sub_205a9(); break;
        case 0x1f2912fd: sub_2058d(); break;
        case 0x1f2912d8: sub_20568(); break;
        case 0x1f2911f2: sub_20482(); break;
        case 0x1000ebd7: sub_1ebd7(); break;
        case 0x1000ebd0: sub_1ebd0(); break;
        case 0x1f29114a: sub_203da(); break;
        case 0x1f290cb1: sub_1ff41(); break;
        case 0x1f290c11: sub_1fea1(); break;
        case 0x1f2902f5: sub_1f585(); break;
        case 0x1f2902ec: sub_1f57c(); break;
        case 0x1f290202: sub_1f492(); break;
        case 0x1f29015f: sub_1f3ef(); break;
        case 0x1f29002a: sub_1f2ba(); break;
        case 0x10006284: sub_16284(); break;
        case 0x1000758f: sub_1758f(); break;
        case 0x1000655b: sub_1655b(); break;
        case 0x10004311: sub_14311(); break;
        case 0x10004759: sub_14759(); break;
        case 0x100037df: sub_137df(); break;
        case 0x10000853: sub_10853(); break;
        case 0x10000761: sub_10761(); break;
        case 0x100070f1: sub_170f1(); break;
        case 0x10006eef: sub_16eef(); break;
        case 0x10000897: sub_10897(); break;
        case 0x100008b9: sub_108b9(); break;
        case 0x1000091f: sub_1091f(); break;
        case 0x10000ab7: sub_10ab7(); break;
        case 0x10000f2b: sub_10f2b(); break;
        case 0x10001f4d: sub_11f4d(); break;
        case 0x10001fb4: sub_11fb4(); break;
        case 0x10001ff3: sub_11ff3(); break;
        case 0x100020f7: sub_120f7(); break;
        case 0x1000213c: sub_1213c(); break;
        case 0x100021e9: sub_121e9(); break;
        case 0x1000221a: sub_1221a(); break;
        case 0x1000229b: sub_1229b(); break;
        case 0x1000237e: sub_1237e(); break;
        case 0x100023ed: sub_123ed(); break;
        case 0x1000246d: sub_1246d(); break;
        case 0x1000250b: sub_1250b(); break;
        case 0x100025a8: sub_125a8(); break;
        case 0x1000262d: sub_1262d(); break;
        case 0x10002697: sub_12697(); break;
        case 0x100028b8: sub_128b8(); break;
        case 0x100028df: sub_128df(); break;
        case 0x10003801: sub_13801(); break;
        case 0x10003835: sub_13835(); break;
        case 0x10003872: sub_13872(); break;
        case 0x10003900: sub_13900(); break;
        case 0x10003998: sub_13998(); break;
        case 0x1000399c: sub_1399c(); break;
        case 0x100039ee: sub_139ee(); break;
        case 0x10003a99: sub_13a99(); break;
        case 0x10003aa7: sub_13aa7(); break;
        case 0x10003b55: sub_13b55(); break;
        case 0x10003b76: sub_13b76(); break;
        case 0x10003bdf: sub_13bdf(); break;
        case 0x100069c8: sub_169c8(); break;
        case 0x100069d0: sub_169d0(); break;
        case 0x10006a0a: sub_16a0a(); break;
        case 0x10006aad: sub_16aad(); break;
        case 0x10006ac7: sub_16ac7(); break;
        case 0x10006bca: sub_16bca(); break;
        case 0x10006d22: sub_16d22(); break;
        case 0x10006e2c: sub_16e2c(); break;
        case 0x1000714d: sub_1714d(); break;
        case 0x100071dd: sub_171dd(); break;
        case 0x100072c4: sub_172c4(); break;
        case 0x10007520: sub_17520(); break;
        case 0x10007569: sub_17569(); break;
        case 0x10007dde: sub_17dde(); break;
        case 0x10007e87: sub_17e87(); break;
        case 0x1000830c: sub_1830c(); break;
        case 0x100083bd: sub_183bd(); break;
        case 0x100085d0: sub_185d0(); break;
        case 0x1000866d: sub_1866d(); break;
        case 0x10008745: sub_18745(); break;
        case 0x10008783: sub_18783(); break;
        case 0x100087d5: sub_187d5(); break;
        case 0x100088a9: sub_188a9(); break;
        case 0x100089ae: sub_189ae(); break;
        case 0x10008c3e: sub_18c3e(); break;
        case 0x10002ab2: sub_12ab2(); break;
        case 0x10002aa4: sub_12aa4(); break;
        case 0x10002a48: sub_12a48(); break;
        case 0x10002a66: sub_12a66(); break;
        case 0x1000308c: sub_1308c(); break;
        case 0x10002aca: sub_12aca(); break;
        case 0x10002a6e: sub_12a6e(); break;
        case 0x10003246: sub_13246(); break;
        case 0x10002e84: sub_12e84(); break;
        case 0x100031b6: sub_131b6(); break;
        case 0x10002f08: sub_12f08(); break;
        case 0x10002f7c: sub_12f7c(); break;
        case 0x10003126: sub_13126(); break;
        case 0x10002d86: sub_12d86(); break;
        case 0x10002df0: sub_12df0(); break;
        case 0x10002d2a: sub_12d2a(); break;
        case 0x10002b80: sub_12b80(); break;
        case 0x10002ac4: sub_12ac4(); break;
        case 0x10002ad0: sub_12ad0(); break;
        case 0x10003360: sub_13360(); break;
        case 0x100035ce: sub_135ce(); break;
        case 0x1000714a: sub_1714a(); break;
        case 0x1000480b: sub_1480b(); break;
        case 0x10001e61: sub_11e61(); break;
        case 0x10003a39: sub_13a39(); break;
        case 0x100037ca: sub_137ca(); break;
        case 0x10006696: sub_16696(); break;
        case 0x100066a6: sub_166a6(); break;
        case 0x1f291716: sub_209a6(); break;
        case 0x1f295213: sub_244a3(); break;
        case 0x1f293220: sub_224b0(); break;
        case 0x10008e01: sub_18e01(); break;
        case 0x10007f32: sub_17f32(); break;
        case 0x10008ca7: sub_18ca7(); break;
        case 0x100019bc: sub_119bc(); break;
        case 0x100000a4: sub_100a4(); break;
        case 0x100003a8: sub_103a8(); break;
        case 0x10007f79: sub_17f79(); break;
        case 0x100080ca: sub_180ca(); break;
        case 0x10008114: sub_18114(); break;
        case 0x10008126: sub_18126(); break;
        case 0x100080f5: sub_180f5(); break;
        case 0x10007ce6: sub_17ce6(); break;
        case 0x10007bef: sub_17bef(); break;
        case 0x10007ac4: sub_17ac4(); break;
        case 0x10008d18: sub_18d18(); break;
        case 0x100084e1: sub_184e1(); break;
        case 0x10008c5f: sub_18c5f(); break;
  
        default:
        {
            char temp[128];
            sprintf(temp, "undefined indirect call %04x:%04x", seg, ofs);
            apiPrint(temp);
        }
    }
}
/*
namespace CicoContext
{
  void cicocontext_t::callIndirect(int seg, int ofs)
  {
//    char temp[128];
//    sprintf(temp, "callIndirect(%x)", a);
//    apiPrint(temp);
    switch (seg*0x10000+ofs)
    {
        default:
            assert(0);
    }
   }
}
*/