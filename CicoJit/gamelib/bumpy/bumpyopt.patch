diff --git a/./bumpy.cpp b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/game.cpp
index ff1c19e..7aded31 100644
--- a/./bumpy.cpp
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/game.cpp
@@ -1592,8 +1592,8 @@ void sub_1ed0()
     memoryASet16(cs, 0x01ff, dx);
     ah = 0x30;
     interrupt(0x21);
-    bp = memoryAGet16(ds, 0x0002);
-    bx = memoryAGet16(ds, 0x002c);
+    bp = memoryBiosGet16(ds, 0x0002);
+    bx = memoryBiosGet16(ds, 0x002c);
     ds = dx;
     memoryASet16(ds, 0x007b, ax);
     memoryASet16(ds, 0x0079, es);
@@ -1607,11 +1607,11 @@ void sub_1ed0()
     cx = 0x7fff;
     flags.direction = false;
 loc_1f04:
-    repne_scasb<MemAuto, DirAuto>(al);
+    repne_scasb<MemBios, DirAuto>(al);
     if (cx == 0)
         goto loc_1f44;
     bx++;
-    if (memoryAGet(es, di) != al)
+    if (memoryBiosGet(es, di) != al)
         goto loc_1f04;
     ch |= 0x80;
     cx = -cx;
@@ -5776,7 +5776,7 @@ loc_42aa:
     es = memoryAGet16(ds, 0xa0da);
     ax += memoryAGet16(ds, 0xa0d8);
     bx = ax;
-    if (memoryAGet(es, bx + 65528) != 0x0e)
+    if (memoryAGet(es, bx - 8) != 0x0e)
         goto loc_42c9;
     goto loc_42ee;
 loc_42c9:
@@ -9915,7 +9915,7 @@ loc_6632:
     es = memoryAGet16(ds, 0xa0da);
     ax += memoryAGet16(ds, 0xa0d8);
     bx = ax;
-    al = memoryAGet(es, bx + 65528);
+    al = memoryAGet(es, bx - 8);
     memoryASet(ss, bp - 1, al);
     ah = 0x00;
     bx = ax;
@@ -10540,7 +10540,7 @@ loc_6b96:
     es = memoryAGet16(ds, 0xa0da);
     ax += memoryAGet16(ds, 0xa0d8);
     bx = ax;
-    al = memoryAGet(es, bx + 65528);
+    al = memoryAGet(es, bx - 8);
     ah = 0x00;
     if (ax)
         goto loc_6bc9;
@@ -10575,7 +10575,7 @@ loc_6be9:
     ah = 0x00;
     ax += memoryAGet16(ds, 0xa0d8);
     bx = ax;
-    if (memoryAGet(es, bx + 65535) != 0x0b)
+    if (memoryAGet(es, bx - 1) != 0x0b)
         goto loc_6c21;
     memoryASet(ds, 0xa0e2, 0x01);
 loc_6c21:
@@ -15837,10 +15837,10 @@ void sub_99d1()
     ax = 0x0040;
     ds = ax;
     bx = 0x0080;
-    ax = memoryAGet16(ds, bx);
+    ax = memoryBiosGet16(ds, bx);
     bx = 0x001a;
-    memoryASet16(ds, bx, ax);
-    memoryASet16(ds, bx + 2, ax);
+    memoryBiosSet16(ds, bx, ax);
+    memoryBiosSet16(ds, bx + 2, ax);
     bx = pop();
     ax = pop();
     ds = pop();
@@ -20328,7 +20328,7 @@ loc_c91e:
     es = memoryAGet16(ds, 0x0079);
     si = 0x0080;
     ah = 0;
-    lodsb_es<MemAuto, DirAuto>();
+    lodsb_es<MemBios, DirAuto>();
     ax++;
     bp = es;
     tx = si;
@@ -20347,7 +20347,7 @@ loc_c91e:
     di = si;
     cl = 0x7f;
     al = 0;
-    repne_scasb<MemAuto, DirAuto>(al);
+    repne_scasb<MemBios, DirAuto>(al);
     if (cx == 0)
         goto loc_c9d5;
     cl ^= 0x7f;
@@ -20369,7 +20369,7 @@ loc_c96a:
     es = pop();
     push(cx);
     cx--;
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemAuto, MemBios, DirAuto>();
     al = 0;
     stosb<MemAuto, DirAuto>();
     ds = bp;
@@ -20472,7 +20472,7 @@ loc_c9b8:
         flags.zero = true;
         goto loc_c9d4;
     }
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemBios, DirAuto>();
     cx--;
     al -= 0x22;
     if (al == 0)
@@ -20625,7 +20625,7 @@ loc_cabd:
         goto loc_cacf;
     dl--;
     cx >>= 1;
-    rep_stosw<MemAuto, DirAuto>();
+    rep_stosw<MemVideo, DirAuto>();
     cl = dh;
     di -= cx;
     di += bp;
@@ -21537,7 +21537,7 @@ loc_d577:
         goto loc_d58e;
     dl--;
     cx >>= 1;
-    rep_movsw<MemAuto, MemAuto, DirAuto>();
+    rep_movsw<MemVideo, MemAuto, DirAuto>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -21596,52 +21596,52 @@ loc_d5d2:
     dx = 0x03ce;
     al = 0x08;
     out(dx, ax);
-    al = memoryAGet(es, di);
+    al = memoryVideoGet(es, di);
     dx = 0x03c5;
     al = 0x08;
     out(dx, al);
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
-    movsb<MemAuto, MemAuto, DirAuto>();
+    movsb<MemVideo, MemAuto, DirAuto>();
     ah = ch;
     si = pop();
     si++;
     dx = 0x03ce;
     al = 0x08;
     out(dx, ax);
-    al = memoryAGet(es, di);
+    al = memoryVideoGet(es, di);
     dx = 0x03c5;
     al = 0x08;
     out(dx, al);
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memoryAGet(ds, si);
-    memoryASet(es, di, ah);
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
-    movsb<MemAuto, MemAuto, DirAuto>();
+    movsb<MemVideo, MemAuto, DirAuto>();
     cl--;
     if (cl != 0)
         goto loc_d5d2;
@@ -21872,7 +21872,7 @@ loc_d880:
         goto loc_d898;
     dl--;
     cx >>= 1;
-    rep_movsw<MemAuto, MemAuto, DirAuto>();
+    rep_movsw<MemAuto, MemVideo, DirAuto>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -21949,7 +21949,7 @@ loc_db00:
     if (dl == 0x00)
         return;
     dl--;
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemVideo, MemVideo, DirAuto>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -24108,11 +24108,11 @@ void sub_fa07()
     tx = di;
     di = memoryAGet16(es, tx);
     ds = memoryAGet16(es, tx + 2);
-    cx = memoryAGet16(ds, di + 65534);
+    cx = memoryAGet16(ds, di - 2);
     tl = cl;
     cl = ch;
     ch = tl;
-    memoryASet16(ds, di + 65534, cx);
+    memoryASet16(ds, di - 2, cx);
     if ((short)cx < 0)
         goto loc_fa26;
     if (cx == 0)
@@ -24121,31 +24121,31 @@ void sub_fa07()
 loc_fa26:
     goto loc_fb77;
 loc_fa29:
-    ax = memoryAGet16(ds, di + 65532);
+    ax = memoryAGet16(ds, di - 4);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(ds, di + 65532, ax);
-    ax = memoryAGet16(ds, di + 65530);
+    memoryASet16(ds, di - 4, ax);
+    ax = memoryAGet16(ds, di - 6);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(ds, di + 65530, ax);
-    ax = memoryAGet16(ds, di + 65528);
+    memoryASet16(ds, di - 6, ax);
+    ax = memoryAGet16(ds, di - 8);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(ds, di + 65528, ax);
-    ax = memoryAGet16(ds, di + 65524);
+    memoryASet16(ds, di - 8, ax);
+    ax = memoryAGet16(ds, di - 12);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(ds, di + 65524, ax);
-    ax = memoryAGet16(ds, di + 65526);
+    memoryASet16(ds, di - 12, ax);
+    ax = memoryAGet16(ds, di - 10);
     tl = ah;
     ah = al;
     al = tl;
-    memoryASet16(ds, di + 65526, ax);
+    memoryASet16(ds, di - 10, ax);
     al &= 0xc0;
     if (al != 0)
         goto loc_fa26;
@@ -24155,7 +24155,7 @@ loc_fa29:
         goto loc_fa63;
     goto loc_fb3c;
 loc_fa63:
-    ax = memoryAGet16(ds, di + 65532);
+    ax = memoryAGet16(ds, di - 4);
     ax >>= 1;
     ax >>= 1;
     dx = ax;
@@ -24297,7 +24297,7 @@ loc_fb36:
 loc_fb39:
     goto loc_fa63;
 loc_fb3c:
-    ax = memoryAGet16(ds, di + 65532);
+    ax = memoryAGet16(ds, di - 4);
     ax >>= 1;
     ax >>= 1;
     dx = ax;
@@ -24779,17 +24779,17 @@ loc_10cd6:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memoryAGet(ds, si);
-    memoryASet(ds, si, bl);
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memoryAGet(cs, 0x11d7);
     out(dx, al);
-    memoryASet(ds, si, bh);
+    memoryVideoSet(ds, si, bh);
     al = memoryAGet(cs, 0x11d8);
     out(dx, al);
-    memoryASet(ds, si, cl);
+    memoryVideoSet(ds, si, cl);
     al = memoryAGet(cs, 0x11d9);
     out(dx, al);
-    memoryASet(ds, si, ch);
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -24828,17 +24828,17 @@ loc_10cd6:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memoryAGet(ds, si);
-    memoryASet(ds, si, bl);
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memoryAGet(cs, 0x11d7);
     out(dx, al);
-    memoryASet(ds, si, bh);
+    memoryVideoSet(ds, si, bh);
     al = memoryAGet(cs, 0x11d8);
     out(dx, al);
-    memoryASet(ds, si, cl);
+    memoryVideoSet(ds, si, cl);
     al = memoryAGet(cs, 0x11d9);
     out(dx, al);
-    memoryASet(ds, si, ch);
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -24878,17 +24878,17 @@ loc_10d94:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memoryAGet(ds, si);
-    memoryASet(ds, si, bl);
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memoryAGet(cs, 0x11d7);
     out(dx, al);
-    memoryASet(ds, si, bh);
+    memoryVideoSet(ds, si, bh);
     al = memoryAGet(cs, 0x11d8);
     out(dx, al);
-    memoryASet(ds, si, cl);
+    memoryVideoSet(ds, si, cl);
     al = memoryAGet(cs, 0x11d9);
     out(dx, al);
-    memoryASet(ds, si, ch);
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -24928,17 +24928,17 @@ loc_10df3:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memoryAGet(ds, si);
-    memoryASet(ds, si, bl);
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memoryAGet(cs, 0x11d7);
     out(dx, al);
-    memoryASet(ds, si, bh);
+    memoryVideoSet(ds, si, bh);
     al = memoryAGet(cs, 0x11d8);
     out(dx, al);
-    memoryASet(ds, si, cl);
+    memoryVideoSet(ds, si, cl);
     al = memoryAGet(cs, 0x11d9);
     out(dx, al);
-    memoryASet(ds, si, ch);
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -24967,17 +24967,17 @@ loc_10df3:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memoryAGet(ds, si);
-    memoryASet(ds, si, bl);
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memoryAGet(cs, 0x11d7);
     out(dx, al);
-    memoryASet(ds, si, bh);
+    memoryVideoSet(ds, si, bh);
     al = memoryAGet(cs, 0x11d8);
     out(dx, al);
-    memoryASet(ds, si, cl);
+    memoryVideoSet(ds, si, cl);
     al = memoryAGet(cs, 0x11d9);
     out(dx, al);
-    memoryASet(ds, si, ch);
+    memoryVideoSet(ds, si, ch);
 loc_10e8a:
     memoryASet16(cs, 0x3213, memoryAGet16(cs, 0x3213) - 1);
     if ((short)memoryAGet16(cs, 0x3213) < 0)
@@ -25195,15 +25195,15 @@ loc_11ba1:
         goto loc_11bca;
     memoryASet16(es, bx + 10, 0x0000);
 loc_11bca:
-    ax = memoryAGet16(ds, di + 65534);
+    ax = memoryAGet16(ds, di - 2);
     memoryASet16(es, bx + 18, ax);
-    ax = memoryAGet16(ds, di + 65532);
+    ax = memoryAGet16(ds, di - 4);
     memoryASet16(es, bx + 16, ax);
-    ax = memoryAGet16(ds, di + 65530);
+    ax = memoryAGet16(ds, di - 6);
     memoryASet16(es, bx + 20, ax);
-    ax = memoryAGet16(ds, di + 65528);
+    ax = memoryAGet16(ds, di - 8);
     memoryASet16(es, bx + 22, ax);
-    ax = memoryAGet16(ds, di + 65524);
+    ax = memoryAGet16(ds, di - 12);
     memoryASet16(es, bx + 24, ax);
     if (ax < 0x0003)
         goto loc_11bf5;
@@ -25244,7 +25244,7 @@ loc_11c0a:
     di = pop();
     ds = pop();
 loc_11c20:
-    al = memoryAGet(ds, di + 65526);
+    al = memoryAGet(ds, di - 10);
     memoryASet(es, bx + 11, al);
     al &= 0xc0;
     if (al != 0)
@@ -25273,10 +25273,10 @@ loc_11c39:
     cx = 0x0006;
     rep_movsw<MemAuto, MemAuto, DirAuto>();
     bx = si;
-    al = memoryAGet(ds, si + 65532);
+    al = memoryAGet(ds, si - 4);
     al >>= 1;
     al >>= 1;
-    ah = memoryAGet(ds, si + 65534);
+    ah = memoryAGet(ds, si - 2);
     mul(ah);
     si += ax;
     cx = ax;
@@ -25284,12 +25284,12 @@ loc_11c39:
         goto loc_11c79;
     goto loc_11d93;
 loc_11c79:
-    cx = memoryAGet16(ds, bx + 65532);
+    cx = memoryAGet16(ds, bx - 4);
     bp = cx;
     cx <<= 1;
     di -= cx;
     di -= 0x0008;
-    cx = memoryAGet16(ds, bx + 65534);
+    cx = memoryAGet16(ds, bx - 2);
 loc_11c88:
     push(cx);
     cx = bp;
@@ -25391,16 +25391,16 @@ loc_11d3c:
     ax = memoryAGet16(cs, 0x0ded);
     if (ax != 0x0000)
         goto loc_11d60;
-    ax = memoryAGet16(es, di + 65534);
+    ax = memoryAGet16(es, di - 2);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(es, di + 65534, ax);
-    ax = memoryAGet16(es, di + 65532);
+    memoryASet16(es, di - 2, ax);
+    ax = memoryAGet16(es, di - 4);
     tl = al;
     al = ah;
     ah = tl;
-    memoryASet16(es, di + 65532, ax);
+    memoryASet16(es, di - 4, ax);
     tl = dl;
     dl = ch;
     ch = tl;
