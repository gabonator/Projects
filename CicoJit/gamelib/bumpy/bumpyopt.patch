diff --git a/./bumpyopt.clean b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/bumpy/cicorun/./bumpy.cpp
index 5b58c1e..9c8c4de 100644
--- a/./bumpyopt.clean
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/bumpy/cicorun/./bumpy.cpp
@@ -1928,8 +1928,8 @@ void sub_1ed0()
     memory16(cs, 0x01ff) = dx;
     ah = 0x30;
     interrupt(0x21);
-    bp = memory16(ds, 0x0002);
-    bx = memory16(ds, 0x002c);
+    bp = memoryPspGet16(ds, 0x0002);
+    bx = memoryPspGet16(ds, 0x002c);
     ds = dx;
     memory16(ds, 0x007b) = ax;
     memory16(ds, 0x0079) = es;
@@ -1943,11 +1943,11 @@ void sub_1ed0()
     cx = 0x7fff;
     flags.direction = false;
 loc_1f04:
-    repne_scasb<MemData, DirForward>(al);
+    repne_scasb<MemPsp, DirForward>(al);
     if (cx == 0)
         goto loc_1f44;
     bx++;
-    if (memory(es, di) != al)
+    if (memoryPspGet(es, di) != al)
         goto loc_1f04;
     ch |= 0x80;
     cx = -cx;
@@ -16086,10 +16086,10 @@ void sub_99d1()
     ax = 0x0040;
     ds = ax;
     bx = 0x0080;
-    ax = memory16(ds, bx);
+    ax = memoryBiosGet16(ds, bx);
     bx = 0x001a;
-    memory16(ds, bx) = ax;
-    memory16(ds, bx + 2) = ax;
+    memoryBiosSet16(ds, bx, ax);
+    memoryBiosSet16(ds, bx+2, ax);
     bx = pop();
     ax = pop();
     ds = pop();
@@ -20576,7 +20576,7 @@ loc_c91e:
     es = memory16(ds, 0x0079);
     si = 0x0080;
     ah = 0;
-    lodsb_es<MemData, DirForward>();
+    lodsb_es<MemPsp, DirForward>();
     ax++;
     bp = es;
     tx = si;
@@ -20595,7 +20595,7 @@ loc_c91e:
     di = si;
     cl = 0x7f;
     al = 0;
-    repne_scasb<MemData, DirForward>(al);
+    repne_scasb<MemPsp, DirForward>(al);
     if (cx == 0)
         goto loc_c9d5;
     cl ^= 0x7f;
@@ -20617,7 +20617,7 @@ loc_c96a:
     es = pop();
     push(cx);
     cx--;
-    rep_movsb<MemData, MemData, DirForward>();
+    rep_movsb<MemData, MemPsp, DirForward>();
     al = 0;
     stosb<MemData, DirForward>();
     ds = bp;
@@ -20721,7 +20721,7 @@ loc_c9b8:
         flags.zero = true;
         goto loc_c9d4;
     }
-    lodsb<MemData, DirForward>();
+    lodsb<MemPsp, DirForward>();
     cx--;
     al -= 0x22;
     if (al == 0)
@@ -20938,7 +20938,7 @@ loc_cabd:
         goto loc_cacf;
     dl--;
     cx >>= 1;
-    rep_stosw<MemData, DirForward>();
+    rep_stosw<MemVideo, DirForward>();
     cl = dh;
     di -= cx;
     di += bp;
@@ -22209,7 +22209,7 @@ loc_d577:
         goto loc_d58e;
     dl--;
     cx >>= 1;
-    rep_movsw<MemData, MemData, DirForward>();
+    rep_movsw<MemVideo, MemData, DirForward>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -22265,52 +22265,52 @@ loc_d5d2:
     dx = 0x03ce;
     al = 0x08;
     out(dx, ax);
-    al = memory(es, di);
+    al = memoryVideoGet(es, di);
     dx = 0x03c5;
     al = 0x08;
     out(dx, al);
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
-    movsb<MemData, MemData, DirForward>();
+    movsb<MemVideo, MemData, DirForward>();
     ah = ch;
     si = pop();
     si++;
     dx = 0x03ce;
     al = 0x08;
     out(dx, ax);
-    al = memory(es, di);
+    al = memoryVideoGet(es, di);
     dx = 0x03c5;
     al = 0x08;
     out(dx, al);
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
     ah = memory(ds, si);
-    memory(es, di) = ah;
+    memoryVideoSet(es, di, ah);
     al >>= 1;
     out(dx, al);
     si -= bp;
-    movsb<MemData, MemData, DirForward>();
+    movsb<MemVideo, MemData, DirForward>();
     cl--;
     if (cl != 0)
         goto loc_d5d2;
@@ -22670,7 +22670,7 @@ loc_d880:
         goto loc_d898;
     dl--;
     cx >>= 1;
-    rep_movsw<MemData, MemData, DirForward>();
+    rep_movsw<MemData, MemVideo, DirForward>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -22751,7 +22751,7 @@ loc_db00:
     if (dl == 0x00)
         return;
     dl--;
-    rep_movsb<MemData, MemData, DirForward>();
+    rep_movsb<MemVideo, MemVideo, DirForward>();
     cl = dh;
     si -= cx;
     di -= cx;
@@ -25572,17 +25572,17 @@ loc_10cd6:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memory(ds, si);
-    memory(ds, si) = bl;
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memory(cs, 0x11d7);
     out(dx, al);
-    memory(ds, si) = bh;
+    memoryVideoSet(ds, si, bh);
     al = memory(cs, 0x11d8);
     out(dx, al);
-    memory(ds, si) = cl;
+    memoryVideoSet(ds, si, cl);
     al = memory(cs, 0x11d9);
     out(dx, al);
-    memory(ds, si) = ch;
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -25621,17 +25621,17 @@ loc_10cd6:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memory(ds, si);
-    memory(ds, si) = bl;
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memory(cs, 0x11d7);
     out(dx, al);
-    memory(ds, si) = bh;
+    memoryVideoSet(ds, si, bh);
     al = memory(cs, 0x11d8);
     out(dx, al);
-    memory(ds, si) = cl;
+    memoryVideoSet(ds, si, cl);
     al = memory(cs, 0x11d9);
     out(dx, al);
-    memory(ds, si) = ch;
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -25671,17 +25671,17 @@ loc_10d94:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memory(ds, si);
-    memory(ds, si) = bl;
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memory(cs, 0x11d7);
     out(dx, al);
-    memory(ds, si) = bh;
+    memoryVideoSet(ds, si, bh);
     al = memory(cs, 0x11d8);
     out(dx, al);
-    memory(ds, si) = cl;
+    memoryVideoSet(ds, si, cl);
     al = memory(cs, 0x11d9);
     out(dx, al);
-    memory(ds, si) = ch;
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -25721,17 +25721,17 @@ loc_10df3:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memory(ds, si);
-    memory(ds, si) = bl;
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memory(cs, 0x11d7);
     out(dx, al);
-    memory(ds, si) = bh;
+    memoryVideoSet(ds, si, bh);
     al = memory(cs, 0x11d8);
     out(dx, al);
-    memory(ds, si) = cl;
+    memoryVideoSet(ds, si, cl);
     al = memory(cs, 0x11d9);
     out(dx, al);
-    memory(ds, si) = ch;
+    memoryVideoSet(ds, si, ch);
     si++;
     cx = pop();
     bx = pop();
@@ -25760,17 +25760,17 @@ loc_10df3:
     out(dx, ax);
     al = ah;
     dx++;
-    ah = memory(ds, si);
-    memory(ds, si) = bl;
+    ah = memoryVideoGet(ds, si);
+    memoryVideoSet(ds, si, bl);
     al = memory(cs, 0x11d7);
     out(dx, al);
-    memory(ds, si) = bh;
+    memoryVideoSet(ds, si, bh);
     al = memory(cs, 0x11d8);
     out(dx, al);
-    memory(ds, si) = cl;
+    memoryVideoSet(ds, si, cl);
     al = memory(cs, 0x11d9);
     out(dx, al);
-    memory(ds, si) = ch;
+    memoryVideoSet(ds, si, ch);
 loc_10e8a:
     memory16(cs, 0x3213) = memory16(cs, 0x3213) - 1;
     if ((short)memory16(cs, 0x3213) < 0)
