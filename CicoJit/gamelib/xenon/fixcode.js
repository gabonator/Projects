var ind = process.argv[2]; //"1f29:006f,1f29:1669,1f29:164c,1f29:15c4,1f29:0125,1f29:011e,1f29:0117,1f29:0095,1f29:0094,1f29:0147,1f29:0137,1f29:1f3c,1f29:1ea2,1f29:1e00,1f29:1cc4,1f29:1afa,1f29:1a88,1f29:19eb,1f29:19ce,1f29:1955,1f29:18fa,1f29:18cb,1f29:1840,1f29:17a9,1f29:1759,1f29:16fc,1f29:13c3,1f29:135d,1f29:131e,1f29:131e,1f29:1319,1f29:12fd,1f29:12d8,1f29:11f2,1000:ebd7,1000:ebd0,1f29:114a,1f29:0cb1,1f29:0c11,1f29:02f5,1f29:02ec,1f29:0202,1f29:015f,1f29:002a,1000:6284,1000:758f,1000:655b,1000:4311,1000:4759,1000:37df,1000:0853,1000:0761,1000:70f1,1000:6eef,1000:0761,1000:0853,1000:0897,1000:08b9,1000:091f,1000:0f2b,1000:1f4d,1000:1fb4,1000:1ff3,1000:20f7,1000:213c,1000:21e9,1000:221a,1000:229b,1000:237e,1000:246d,1000:250b,1000:25a8,1000:262d,1000:2697,1000:28df,1000:37df,1000:3801,1000:3835,1000:3872,1000:3900,1000:3998,1000:399c,1000:39ee,1000:3a99,1000:3aa7,1000:3b76,1000:3bdf,1000:4311,1000:4759,1000:69c8,1000:69d0,1000:6a0a,1000:6aad,1000:6ac7,1000:6bca,1000:6d22,1000:6e2c,1000:714d,1000:71dd,1000:72c4,1000:7520,1000:7569,1000:2ab2,1000:2aa4,1000:2a48,1000:2a66,1000:308c,1000:2aca,1000:2a6e,1000:3246,1000:2e84,1000:31b6,1000:2f08,1000:2f7c,1000:3126,1000:2d86,1000:2df0,1000:2d2a,1000:2b80,1000:2ac4,1000:2ad0,1000:3360,1000:35ce,1000:714a,1000:72c4,1000:7520,1000:480b,1000:ebd0,1000:1e61,1000:3aa7,1000:714a,1000:08b9,1f29:0cb1,1000:3a39,1000:0f2b,1000:3998,1000:28df,1000:2a6e,1000:2ab2,1000:37ca,1000:6d22,1000:1f4d,1000:308c,1000:6a0a,1000:25a8,1000:3835,1000:39ee,1000:091f,1000:3a39,1000:3b76,1000:6aad,1000:6696,1000:66a6,1f29:1716,1f29:5213,1f29:3220,1f29:1716,1f29:3220,1000:6ac7,1000:2ad0"
ind = ind.split(",")
for (var i=0; i<ind.length; i++)
{
  var seg = ind[i].substr(0,4);
  var ofs = ind[i].substr(5,4);
  var func = parseInt("0x"+seg)*16 + parseInt("0x"+ofs);

  console.log(`void sub_${func.toString(16)}();`);
}


console.log("void CicoContext::cicocontext_t::callIndirect(int seg, int ofs)");
console.log("{");
console.log("    switch (seg*0x10000+ofs)");
console.log("    {");
used = {};
for (var i=0; i<ind.length; i++)
{
  var seg = ind[i].substr(0,4);
  var ofs = ind[i].substr(5,4);
  var key = seg+ofs;
  if (key in used)
    continue;
  used[key] = 1;

  var func = parseInt("0x"+seg)*16 + parseInt("0x"+ofs);

  console.log(`        case 0x${seg}${ofs}: sub_${func.toString(16)}(); break;`);
}
console.log("        default:")
console.log("            stop();")
console.log("    }")
console.log("}")
