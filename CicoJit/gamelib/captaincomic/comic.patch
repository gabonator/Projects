diff --git a/./comic.clean b/cicorun/comic.cpp
index 3b8c28d..3c606a4 100644
--- a/./comic.clean
+++ b/cicorun/comic.cpp
@@ -3,6 +3,10 @@ using namespace CicoContext;
 
 void sub_1ed0();
 
+int sign(int i)
+{
+    return i >= 0 ? 1 : -1;
+}
 void start()
 {
     headerSize = 0x0200;
@@ -86,6 +90,11 @@ void sub_4119();
 void sub_4135();
 void sub_4159();
 
+void timer()
+{
+    sub_22c5();
+}
+
 #ifdef callIndirect
 #undef callIndirect
 #endif
@@ -741,6 +750,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -749,7 +759,7 @@ loc_3044: // 01ed:1174
         goto loc_3071;
     if (memoryAGet(ds, 0xca33) == 0x01)
         goto loc_3044;
-    if (memoryAGet(cs, 0x0388) == 0x01)
+    if (memoryAGet(cs, 0x0388) == 0x01) // jump
         goto loc_3044;
     al = memoryAGet(ds, 0x0047);
     memoryASet(ds, 0xca37, al);
@@ -1131,6 +1141,7 @@ void sub_218c() // 01ed:02bc
 void sub_2213() // 01ed:0343
 {
 loc_2213: // 01ed:0343
+    sync(); timer();
     if (memoryAGet(cs, 0x03ea) != 0x01)
         goto loc_2213;
     memoryASet(cs, 0x03ea, 0x00);
@@ -1281,7 +1292,7 @@ loc_2366: // 01ed:0496
     bx = pop();
     es = pop();
     ax = pop();
-    stop(); // ljmp cs:[0x3e6]
+//    stop(); // ljmp cs:[0x3e6]
 }
 void sub_2373() // 01ed:04a3
 {
@@ -1335,7 +1346,8 @@ loc_23e5: // 01ed:0515
     al &= 0xfc;
     out(0x61, al);
 loc_23eb: // 01ed:051b
-    stop(); // iret 
+//    stop(); // iret
+    return;
 }
 void sub_23ec() // 01ed:051c
 {
@@ -2428,6 +2440,7 @@ loc_2fc5: // 01ed:10f5
     if (--cx)
         goto loc_2fc5;
     ax = 0x0004;
+    sub_2373(); // GABO INT!
     if (!ax)
         goto loc_2fe5;
     cx = 0x0001;
@@ -2513,7 +2526,7 @@ void sub_31f7() // 01ed:1327
 void sub_33b4() // 01ed:14e4
 {
     goto loc_33b4;
-loc_2226: // 01ed:0356
+loc_2226: // 01ed:x0356
     ax = 0x0002;
     sub_2465();
     ax = 0x0002;
@@ -2872,6 +2885,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -3604,6 +3618,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -4332,6 +4347,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -4648,7 +4664,10 @@ loc_3410: // 01ed:1540
 loc_341e: // 01ed:154e
     ax = si;
     if (ah != 0xfe)
+    {
+        flags.zero = false;
         goto loc_3437;
+    }
     di = memoryAGet16(ds, 0x5172);
     if (memoryAGet(ds, di + 4) == 0xff)
         goto loc_340a;
@@ -4656,7 +4675,7 @@ loc_341e: // 01ed:154e
     bl = memoryAGet(ds, di + 4);
     goto loc_346e;
 loc_3437: // 01ed:1567
-    if (stop(/*1 - je loc_340a*/))
+    if (flags.zero)
         goto loc_340a;
     ah += 0x02;
     al += 0x03;
@@ -5067,6 +5086,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -5379,7 +5399,10 @@ loc_340f: // 01ed:153f
 loc_341e: // 01ed:154e
     ax = si;
     if (ah != 0xfe)
+    {
+        flags.zero = false;
         goto loc_3437;
+    }
     di = memoryAGet16(ds, 0x5172);
     if (memoryAGet(ds, di + 4) == 0xff)
         goto loc_340a;
@@ -5387,7 +5410,7 @@ loc_341e: // 01ed:154e
     bl = memoryAGet(ds, di + 4);
     goto loc_346e;
 loc_3437: // 01ed:1567
-    if (stop(/*1 - je loc_340a*/))
+    if (flags.zero)
         goto loc_340a;
     ah += 0x02;
     al += 0x03;
@@ -5798,6 +5821,7 @@ loc_2eab: // 01ed:0fdb
     goto loc_2df0;
     //   gap of 231 bytes
 loc_3044: // 01ed:1174
+    sync(); timer();
     cx = 0;
     es = cx;
     cl = memoryAGet(es, 0x041a);
@@ -6794,8 +6818,11 @@ loc_3973: // 01ed:1aa3
 loc_3985: // 01ed:1ab5
     goto loc_39f9;
 loc_3987: // 01ed:1ab7
+    flags.carry = sign((int8_t)al) != sign((int8_t)(al+ah));
     al += ah;
-    stop(); // jo loc_39f9
+    if (flags.carry) // jxxx cico
+        goto loc_39f9;
+//    stop(); // jo loc_39f9
 loc_398b: // 01ed:1abb
     ah = al;
     al = memoryAGet(ds, 0x003f);
