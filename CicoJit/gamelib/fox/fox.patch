diff --git a/./fox.clean b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/fox/cicorun/./fox.cpp
index 8273ef2..c49cec0 100644
--- a/./fox.clean
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/fox/cicorun/./fox.cpp
@@ -1,5 +1,7 @@
 #include "cicoemu.h"
 using namespace CicoContext;
+const bool infiniteEnergy = true;
+int startupLevel = 0;
 
 void sub_10205();
 
@@ -13,6 +15,7 @@ void start()
     ss = 0x1000;
     sp = 0x0200;
     load("/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/fox/dos", "game.exe", 84992);
+    memoryASet(0x168f, 0x5250, startupLevel);
     sub_10205();
 }
 void sub_10200();
@@ -43,7 +46,7 @@ void sub_10901();
 void sub_109b0();
 void sub_10a05();
 void sub_10b7b();
-void sub_10cbe();
+bool sub_10cbe();
 void sub_10e1e();
 void sub_10e30();
 void sub_10eeb();
@@ -874,12 +877,14 @@ void sub_105f2()
     ds = ax;
 loc_105f7:
     sub_10a05();
+    sync();
     al = memoryAGet(ds, 0x047e);
     al |= memoryAGet(ds, 0x042b);
     if (!al)
         goto loc_105f7;
 loc_10603:
     sub_10a05();
+    sync();
     al = memoryAGet(ds, 0x042b);
     al |= memoryAGet(ds, 0x047e);
     if (al)
@@ -1657,7 +1662,8 @@ loc_10c08:
     di = 0;
 loc_10c17:
     bx = 0;
-    sub_10cbe();
+    if (sub_10cbe())
+        return;
     if (!bh)
         goto loc_10c66;
     if (bl < 0x02)
@@ -1825,7 +1831,7 @@ loc_10e02:
     ds = ax;
     ax = memoryAGet16(cs, 0x0af4);
 }
-void sub_10cbe()
+bool sub_10cbe()
 {
     goto loc_10cbe;
 loc_10afd:
@@ -1894,9 +1900,10 @@ loc_10cc8:
     if (!(bh & 0x80))
         goto loc_10cbe;
     bh &= 0x7f;
-    return;
+    return false;
 loc_10cd3:
-    ax = pop();
+//    stop(); //ax pop?
+//    ax = pop();
     memoryASet(cs, 0x6bb3, 0x01);
     bx = memoryAGet16(cs, 0x0af2);
     ah = 0x3e;
@@ -1905,6 +1912,7 @@ loc_10cd3:
     ax = 0x168f;
     ds = ax;
     ax = memoryAGet16(cs, 0x0af4);
+    return true;
 }
 void sub_10e1e()
 {
@@ -2094,18 +2102,6 @@ void sub_112d3()
     ax = 0x168f;
     ds = ax;
     memoryASet(ds, 0x651a, 0x00);
-loc_112dd:
-    ax = memoryAGet16(ds, 0x0431);
-    ax -= memoryAGet16(cs, 0x16e0);
-    if ((short)ax >= 0)
-        goto loc_112e9;
-    ax = -ax;
-loc_112e9:
-    if (ax < 0x0002)
-        goto loc_112dd;
-    if (ax > 0x0002)
-        goto loc_112f7;
-    sub_13443();
     memoryASet(ds, 0x651a, memoryAGet(ds, 0x651a) + 1);
 loc_112f7:
     ax = memoryAGet16(cs, 0x16e0);
@@ -2478,13 +2474,7 @@ loc_1185e:
 }
 void sub_119eb()
 {
-loc_119eb:
-    al = memoryAGet(cs, 0x16e4);
-    al &= 0x03;
-    if (al != 0x03)
-        return;
-    if (memoryAGet(ds, 0x09b2) != 0x00)
-        goto loc_119eb;
+    sync();
 }
 void sub_119fe()
 {
@@ -7032,7 +7022,7 @@ loc_13f5a:
 loc_13f6b:
     ax = memoryAGet16(ds, si + 14);
     ax = sar(ax, cl);
-    if (stop(/*70*/))
+    if (ax == 0)
         goto loc_13f77;
     memoryASet(ds, 0x6511, 0x04);
 loc_13f77:
@@ -7928,9 +7918,9 @@ loc_146d9:
         goto loc_14739;
     flags.carry = (al + 0x08) >= 0x100;
     al += 0x08;
-    bx += flags.carry;
+    bx += flags.carry;          // check! todo
     flags.carry = !flags.carry;
-    stop(/*8*/); // inject carry failed
+    //stop(/*8*/); // inject carry failed
     bx += flags.carry;
     if (bx == bp)
         goto loc_14706;
@@ -9267,13 +9257,17 @@ loc_1502e:
     al &= 0x0f;
     if (al == 0x01)
         goto loc_14ffd;
+    flags.zero = al == 0x03;
 loc_15040:
-    if (stop(/*1 - je loc_14ffd*/))
+    if (flags.zero)
         goto loc_14ffd;
     if (al == 0x07)
         goto loc_14ffd;
     if (al == 0x08)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
     if (al != 0x05)
         goto loc_1505c;
     sub_14ff9();
@@ -9289,10 +9283,16 @@ loc_1505c:
     if (ah == 0x06)
         goto loc_1507e;
     if (al == 0x00)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
     ah = memoryAGet(ds, 0x042d);
     if (ax == 0xff06)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
 loc_1507e:
     sub_14ef6();
     memoryASet(ds, 0x650d, 0x01);
@@ -9718,6 +9718,7 @@ loc_153c3:
 }
 void sub_153c6()
 {
+    sync();
     ax = 0x168f;
     ds = ax;
     sub_15538();
@@ -9733,6 +9734,7 @@ loc_153d9:
     sub_155c8();
     goto loc_153d4;
 loc_153f1:
+    sync();
     sub_10a05();
     if (memoryAGet(ds, 0x042d) == 0x00)
         goto loc_1540b;
@@ -9765,6 +9767,7 @@ loc_1543a:
     memoryASet(ds, 0x87d4, 0x00);
     goto loc_153d9;
 loc_15444:
+    sync();
     sub_10a05();
     if (memoryAGet(ds, 0x042b) != 0x00)
         goto loc_15444;
@@ -10242,12 +10245,12 @@ loc_1571f:
     ah = 0;
     cl = 0x08;
 loc_15723:
+    flags.carry = false;
     lodsb<MemAuto, DirAuto>();
     if (!(bl & al))
         goto loc_15729;
     flags.carry = true;
 loc_15729:
-    stop(/*carry2*/);
     ah = rcl(ah, 0x01);
     cl--;
     if (cl != 0)
@@ -10626,7 +10629,7 @@ loc_15a0a:
     bh &= 0x1f;
     tl = memoryAGet(ds, bx + 28441);
     bx = ax;
-    if (stop("check inject: test byte ptr [bx + 0x6f19], 0x10") && tl & 0x10)
+    if (tl & 0x10)
         goto loc_15a20;
     sub_15295();
     if (flags.carry)
@@ -10724,7 +10727,7 @@ loc_15ad0:
         goto loc_15b0a;
 loc_15af0:
     ax = memoryAGet16(ds, si + 14);
-    if (stop(/*1 - je loc_15b11*/))
+    if (ax == 0x14)
         goto loc_15b11;
     ax = sar(ax, cl);
     memoryASet16(ds, si + 2, memoryAGet16(ds, si + 2) + ax);
@@ -10867,7 +10870,8 @@ void sub_15bcc()
     memoryASet(ds, 0x6506, 0x32);
     if (memoryAGet(ds, 0x6516) != 0x00)
         return;
-    memoryASet(ds, 0x0419, memoryAGet(ds, 0x0419) - 1);
+    if (!infiniteEnergy)
+        memoryASet(ds, 0x0419, memoryAGet(ds, 0x0419) - 1);
     if ((char)memoryAGet(ds, 0x0419) >= 0)
         return;
     memoryASet(ds, 0x0419, 0x00);
@@ -10929,7 +10933,7 @@ loc_15c40:
     cx = pop();
     bx = pop();
     ax = pop();
-    if (stop(/*1 - jae loc_15c57*/))
+    if (!flags.carry)
         return;
     bp = memoryAGet16(ds, si + 12);
     if (!bp)
@@ -12899,7 +12903,7 @@ void sub_16782()
     push(es);
     push(ds);
     bx = ax;
-    ax = 0xf000;
+    ax = 0x168f;
     es = ax;
     ax = 0x168f;
     ds = ax;
@@ -12910,8 +12914,9 @@ void sub_16782()
     ah -= memoryAGet(es, bx + 61442);
     ax = ror(ax, cl);
     cx = 0x0008;
+    flags.carry = false;
 loc_167ad:
-    stop(/*8*/); // inject carry failed
+    //stop(/*8*/); // inject carry failed
     ax += memoryAGet16(es, si) + flags.carry;
     si++;
     si++;
