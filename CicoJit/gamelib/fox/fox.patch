diff --git a/./fox.cpp b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/./game.cpp
index 17eaa7b..054bc49 100644
--- a/./fox.cpp
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/cicorun/cicorun/./game.cpp
@@ -51,7 +51,7 @@ void sub_10901();
 void sub_109b0();
 void sub_10a05();
 void sub_10b7b();
-void sub_10cbe();
+bool sub_10cbe();
 void sub_10e1e();
 void sub_10e30();
 void sub_10eeb();
@@ -982,6 +982,8 @@ loc_105f7:
     sub_10a05();
     al = memoryAGet(ds, 0x047e);
     al |= memoryAGet(ds, 0x042b);
+    sync();
+    al = 1;
     if (!al)
         goto loc_105f7;
 loc_10603:
@@ -1763,7 +1765,8 @@ loc_10c08:
     di = 0;
 loc_10c17:
     bx = 0;
-    sub_10cbe();
+    if (sub_10cbe())
+        return;
     if (!bh)
         goto loc_10c66;
     if (bl < 0x02)
@@ -1931,7 +1934,7 @@ loc_10e02:
     ds = ax;
     ax = memoryAGet16(cs, 0x0af4);
 }
-void sub_10cbe()
+bool sub_10cbe()
 {
     goto loc_10cbe;
 loc_10afd:
@@ -2000,9 +2003,10 @@ loc_10cc8:
     if (!(bh & 0x80))
         goto loc_10cbe;
     bh &= 0x7f;
-    return;
+    return false;
 loc_10cd3:
-    ax = pop();
+//    stop(); //ax pop?
+//    ax = pop();
     memoryASet(cs, 0x6bb3, 0x01);
     bx = memoryAGet16(cs, 0x0af2);
     ah = 0x3e;
@@ -2011,6 +2015,7 @@ loc_10cd3:
     ax = 0x168f;
     ds = ax;
     ax = memoryAGet16(cs, 0x0af4);
+    return true;
 }
 void sub_10e1e()
 {
@@ -2200,18 +2205,6 @@ void sub_112d3()
     ax = 0x168f;
     ds = ax;
     memoryASet(ds, 0x651a, 0x00);
-loc_112dd:
-    ax = memoryAGet16(ds, 0x0431);
-    ax -= memoryAGet16(cs, 0x16e0);
-    if ((short)ax >= 0)
-        goto loc_112e9;
-    ax = -ax;
-loc_112e9:
-    if (ax < 0x0002)
-        goto loc_112dd;
-    if (ax > 0x0002)
-        goto loc_112f7;
-    sub_13443();
     memoryASet(ds, 0x651a, memoryAGet(ds, 0x651a) + 1);
 loc_112f7:
     ax = memoryAGet16(cs, 0x16e0);
@@ -2584,13 +2577,7 @@ loc_1185e:
 }
 void sub_119eb()
 {
-loc_119eb:
-    al = memoryAGet(cs, 0x16e4);
-    al &= 0x03;
-    if (al != 0x03)
-        return;
-    if (memoryAGet(ds, 0x09b2) != 0x00)
-        goto loc_119eb;
+    sync();
 }
 void sub_119fe()
 {
@@ -3255,8 +3242,9 @@ loc_11f60:
     ax += cx;
     memoryASet16(cs, 0x1c5a, ax);
     ax = memoryAGet16(ds, 0x5278);
+    flags.carry = (short)ax <= (short)0x00c0;
     ax -= 0x00c0;
-    if (stop(/*71*/))
+    if (flags.carry)
         goto loc_11f8f;
     memoryASet(cs, 0x1c52, memoryAGet(cs, 0x1c52) - al);
     mul(dl);
@@ -7135,7 +7123,7 @@ loc_13f5a:
 loc_13f6b:
     ax = memoryAGet16(ds, si + 14);
     ax = sar(ax, cl);
-    if (stop(/*70*/))
+    if (ax == 0)
         goto loc_13f77;
     memoryASet(ds, 0x6511, 0x04);
 loc_13f77:
@@ -7143,7 +7131,7 @@ loc_13f77:
     if ((char)al >= (char)dl)
         goto loc_13f87;
     memoryASet16(ds, si + 14, memoryAGet16(ds, si + 14) + 0x0010);
-    if (stop(/*71*/))
+    if ((short)memory16(ds, si + 14) <= (short)0)
         goto loc_13f87;
     memoryASet16(ds, si + 12, memoryAGet16(ds, si + 12) + 1);
 loc_13f87:
@@ -7496,7 +7484,7 @@ loc_14270:
         goto loc_1429c;
     goto loc_1428a;
 loc_1427e:
-    if (stop(/*72*/))
+    if ((short)memory16(ds, 21122) < 0 /*CHECK*/)
         goto loc_14297;
     if ((short)dx < (short)0x000d)
         goto loc_142d7;
@@ -7994,9 +7982,9 @@ loc_146d9:
         goto loc_14739;
     flags.carry = (al + 0x08) >= 0x100;
     al += 0x08;
-    bx += flags.carry;
+    bx += flags.carry;          // check! todo
     flags.carry = !flags.carry;
-    stop(/*8*/); // inject carry failed
+    //stop(/*8*/); // inject carry failed
     bx += flags.carry;
     if (bx == bp)
         goto loc_14706;
@@ -8035,8 +8023,9 @@ loc_14752:
     bx -= 0x0100;
     if (flags.carry)
         goto loc_1475d;
+    flags.carry = dh > 0x10;
     dh -= 0x10;
-    if (stop(/*ja*/))
+    if (flags.carry)
         goto loc_1474f;
 loc_1475d:
     dx = pop();
@@ -9195,13 +9184,17 @@ loc_1502e:
     al &= 0x0f;
     if (al == 0x01)
         goto loc_14ffd;
+    flags.zero = al == 0x03;
 loc_15040:
-    if (stop(/*1 - je loc_14ffd*/))
+    if (flags.zero)
         goto loc_14ffd;
     if (al == 0x07)
         goto loc_14ffd;
     if (al == 0x08)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
     if (al != 0x05)
         goto loc_1505c;
     sub_14ff9();
@@ -9217,10 +9210,16 @@ loc_1505c:
     if (ah == 0x06)
         goto loc_1507e;
     if (al == 0x00)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
     ah = memoryAGet(ds, 0x042d);
     if (ax == 0xff06)
+    {
+        flags.zero = true;
         goto loc_15040;
+    }
 loc_1507e:
     sub_14ef6();
     memoryASet(ds, 0x650d, 0x01);
@@ -9572,12 +9571,13 @@ void sub_15333()
     if (bl < 0x65)
         goto loc_15349;
     bx = 0;
+    flags.zero = true;
     goto loc_1534e;
 loc_15349:
+    flags.zero = !(memory(ds, bx + 0x6f19) & 2);
 loc_1534e:
     bp = pop();
     bx = pop();
-    stop(/*inject ret*/);
     assert(pop() == 0x7777);
     sp += 2;
 }
@@ -9646,6 +9646,7 @@ loc_153c3:
 }
 void sub_153c6()
 {
+    sync();
     ax = 0x168f;
     ds = ax;
     sub_15538();
@@ -9661,6 +9662,7 @@ loc_153d9:
     sub_155c8();
     goto loc_153d4;
 loc_153f1:
+    sync();
     sub_10a05();
     if (memoryAGet(ds, 0x042d) == 0x00)
         goto loc_1540b;
@@ -9693,6 +9695,7 @@ loc_1543a:
     memoryASet(ds, 0x87d4, 0x00);
     goto loc_153d9;
 loc_15444:
+    sync();
     sub_10a05();
     if (memoryAGet(ds, 0x042b) != 0x00)
         goto loc_15444;
@@ -10170,12 +10173,12 @@ loc_1571f:
     ah = 0;
     cl = 0x08;
 loc_15723:
+    flags.carry = false;
     lodsb<MemAuto, DirAuto>();
     if (!(bl & al))
         goto loc_15729;
     flags.carry = true;
 loc_15729:
-    stop(/*carry2*/);
     ah = rcl(ah, 0x01);
     cl--;
     if (cl != 0)
@@ -10629,7 +10632,7 @@ loc_15ad0:
         goto loc_15b0a;
 loc_15af0:
     ax = memoryAGet16(ds, si + 14);
-    if (stop(/*1 - je loc_15b11*/))
+    if (ax == 0x14)
         goto loc_15b11;
     ax = sar(ax, cl);
     memoryASet16(ds, si + 2, memoryAGet16(ds, si + 2) + ax);
@@ -10792,7 +10795,7 @@ loc_15c40:
     cx = pop();
     bx = pop();
     ax = pop();
-    if (stop(/*1 - jae loc_15c57*/))
+    if (!flags.carry)
         return;
     bp = memoryAGet16(ds, si + 12);
     if (!bp)
@@ -12762,7 +12765,7 @@ void sub_16782()
     push(es);
     push(ds);
     bx = ax;
-    ax = 0xf000;
+    ax = 0x168f;
     es = ax;
     ax = 0x168f;
     ds = ax;
@@ -12773,8 +12776,9 @@ void sub_16782()
     ah -= memoryAGet(es, bx + 61442);
     ax = ror(ax, cl);
     cx = 0x0008;
+    flags.carry = false;
 loc_167ad:
-    stop(/*8*/); // inject carry failed
+    //stop(/*8*/); // inject carry failed
     ax += memoryAGet16(es, si) + flags.carry;
     si++;
     si++;
