diff --git a/./tunneler.cpp b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/tuneller/cicorun/./tunneler.cpp
index 3018b59..109b3c9 100644
--- a/./tunneler.cpp
+++ b/Users/gabrielvalky/Documents/git/Projects/CicoJit/gamelib/tuneller/cicorun/./tunneler.cpp
@@ -403,7 +403,7 @@ loc_2282: // 01ed:03b2
     dx = cx;
     cx = bx;
     push(di);
-    rep_stosw<MemAuto, DirAuto>();
+    rep_stosw<MemVideo, DirForward>();
     di = pop();
     di += 0x00a0;
     cx = dx;
@@ -504,13 +504,13 @@ loc_2324: // 01ed:0454
     di = memoryAGet16(ds, 0x0440);
     push(ds);
     cx = memoryAGet16(ds, 0x0442);
-    ds = cx;
+    ds = cx ? cx : cs;
     cx = 0x0047;
 loc_233f: // 01ed:046f
     push(cx);
     cx = 0x0026;
 loc_2343: // 01ed:0473
-    movsb<MemAuto, MemAuto, DirAuto>();
+    movsb<MemVideo, MemData, DirForward>();
     di++;
     if (--cx)
         goto loc_2343;
@@ -11873,23 +11873,23 @@ void sub_8db2() // 08d0:00b2
     si = memoryAGet16(ss, bp + 8);
     ds = memoryAGet16(ss, bp + 8 + 2);
     flags.direction = false;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     push(ax);
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     bx = ax;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     cx = ax;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     dx = ax;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     bp = ax;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     push(ax);
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     di = ax;
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     push(ax);
-    lodsw<MemAuto, DirAuto>();
+    lodsw<MemData, DirForward>();
     es = ax;
     ds = pop();
     si = pop();
@@ -11904,25 +11904,25 @@ void sub_8db2() // 08d0:00b2
     di = memoryAGet16(ss, bp + 16);
     es = memoryAGet16(ss, bp + 16 + 2);
     flags.direction = false;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = bx;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = cx;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = dx;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = pop();
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = si;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = pop();
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = ds;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = pop();
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = pop();
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ds = pop();
     bp = pop();
     assert(pop() == 0x7777);
@@ -12709,7 +12709,7 @@ loc_9438: // 08e1:0628
     if (!bl)
         goto loc_9457;
 loc_9441: // 08e1:0631
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     bl = al;
 loc_9444: // 08e1:0634
     in(al, dx);
@@ -12721,7 +12721,7 @@ loc_944a: // 08e1:063a
     if (!(al & 0x01))
         goto loc_944a;
     ax = bx;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     flags.interrupts = true;
     if (--cx)
         goto loc_9441;
@@ -12729,8 +12729,8 @@ loc_944a: // 08e1:063a
 loc_9457: // 08e1:0647
     ah = bh;
 loc_9459: // 08e1:0649
-    lodsb<MemAuto, DirAuto>();
-    stosw<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
+    stosw<MemVideo, DirForward>();
     if (--cx)
         goto loc_9459;
 loc_945d: // 08e1:064d
@@ -13298,10 +13298,10 @@ void sub_99b7() // 0947:0547
 {
     si = memoryAGet16(ds, 0x179e);
     flags.direction = false;
-    movsw<MemAuto, MemAuto, DirAuto>();
-    movsw<MemAuto, MemAuto, DirAuto>();
-    movsw<MemAuto, MemAuto, DirAuto>();
-    movsw<MemAuto, MemAuto, DirAuto>();
+    movsw<MemData, MemData, DirForward>();
+    movsw<MemData, MemData, DirForward>();
+    movsw<MemData, MemData, DirForward>();
+    movsw<MemData, MemData, DirForward>();
     di -= 0x0008;
     memoryASet16(ds, 0x179e, si);
 }
@@ -13370,15 +13370,15 @@ void sub_9a4f() // 0947:05df
     di = memoryAGet16(ss, bx + 6);
     es = memoryAGet16(ss, bx + 6 + 2);
     cx = memoryAGet16(ss, bx + 4);
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     if (al <= cl)
         goto loc_9a67;
     al = cl;
 loc_9a67: // 0947:05f7
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
     cl = al;
     ch = 0;
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemData, MemData, DirForward>();
     ds = dx;
     assert(pop() == 0x7777);
     cs = pop();
@@ -13396,7 +13396,7 @@ void sub_9ac2() // 0947:0652
     ds = memoryAGet16(ss, bx + 4 + 2);
     cl = memoryAGet(es, di);
     ch = 0;
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     flags.carry = (memoryAGet(es, di) + al) >= 0x100;
     memoryASet(es, di, memoryAGet(es, di) + al);
     if (!flags.carry)
@@ -13408,7 +13408,7 @@ loc_9ae2: // 0947:0672
     di += cx;
     di++;
     cl = al;
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemData, MemData, DirForward>();
     ds = dx;
     assert(pop() == 0x7777);
     cs = pop();
@@ -13425,7 +13425,7 @@ void sub_9b25() // 0947:06b5+zero
     ds = memoryAGet16(ss, bx + 8 + 2);
     di = memoryAGet16(ss, bx + 4);
     es = memoryAGet16(ss, bx + 4 + 2);
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     ah = memoryAGet(es, di);
     di++;
     cl = al;
@@ -13437,7 +13437,7 @@ loc_9b3f: // 0947:06cf
     if (!cl)
         goto loc_9b49;
     ch = 0;
-    repe_cmpsb<MemData, MemData, DirAuto>();
+    repe_cmpsb<MemData, MemData, DirForward>();
     if (!flags.zero)
         goto loc_9b4b;
 loc_9b49: // 0947:06d9
@@ -13457,9 +13457,9 @@ void sub_9b50() // 0947:06e0
     di = memoryAGet16(ss, bx + 6);
     es = memoryAGet16(ss, bx + 6 + 2);
     al = 0x01;
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
     al = memoryAGet(ss, bx + 4);
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
     assert(pop() == 0x7777);
     cs = pop();
     sp += 2;
@@ -13473,7 +13473,7 @@ void sub_9c51() // 0947:07e1
     es = memoryAGet16(ss, bx + 4 + 2);
     cx = 0x0010;
     ax = 0;
-    rep_stosw<MemAuto, DirAuto>();
+    rep_stosw<MemData, DirForward>();
     assert(pop() == 0x7777);
     cs = pop();
 }
@@ -14415,7 +14415,7 @@ void sub_a597() // 0947:1127
     bx += 0x0001;
     dx += flags.carry;
     al = 0x2d;
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
 loc_a5ac: // 0947:113c
     si = 0x1179;
     cl = 0x09;
@@ -14448,7 +14448,7 @@ loc_a5c9: // 0947:1159
     bx += memoryAGet16(cs, si);
     dx += memoryAGet16(cs, si + 2) + flags.carry;
     si += 0x0004;
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
     cl--;
     if (cl != 0)
         goto loc_a5c7;
@@ -14467,36 +14467,36 @@ void sub_a6a9() // 0947:1239
     ds = memoryAGet16(ss, bx + 4 + 2);
     flags.direction = false;
     ax = 0;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = 0xd7b0;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = 0x0080;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = 0;
-    stosw<MemAuto, DirAuto>();
-    stosw<MemAuto, DirAuto>();
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
+    stosw<MemData, DirForward>();
+    stosw<MemData, DirForward>();
     ax = di + 0x74;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = es;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = 0x135d;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = cs;
-    stosw<MemAuto, DirAuto>();
+    stosw<MemData, DirForward>();
     ax = 0;
     cx = 0x000e;
-    rep_stosw<MemAuto, DirAuto>();
-    lodsb<MemAuto, DirAuto>();
+    rep_stosw<MemData, DirForward>();
+    lodsb<MemData, DirForward>();
     if (al <= 0x4f)
         goto loc_a6e1;
     al = 0x4f;
 loc_a6e1: // 0947:1271
     cl = al;
     ch = 0;
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemData, MemData, DirForward>();
     al = 0;
-    stosb<MemAuto, DirAuto>();
+    stosb<MemData, DirForward>();
     ds = pop();
     assert(pop() == 0x7777);
     cs = pop();
@@ -15053,7 +15053,7 @@ void sub_ab1d() // 0947:16ad
     ds = memoryAGet16(ss, bp + 8 + 2);
     cx = memoryAGet16(ss, bp + 6);
     flags.direction = false;
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     ah = 0;
     tx = cx;
     cx -= ax;
@@ -15072,7 +15072,7 @@ loc_ab3f: // 0947:16cf
         goto loc_ab4a;
 loc_ab43: // 0947:16d3
     flags.direction = false;
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     sub_a9d5(); // 0947:1565
     if (--cx)
         goto loc_ab43;
@@ -15120,7 +15120,7 @@ loc_abd6: // 0947:1766
     ds = pop();
 loc_abdb: // 0947:176b
     flags.direction = false;
-    lodsb<MemAuto, DirAuto>();
+    lodsb<MemData, DirForward>();
     sub_a9d5(); // 0947:1565
     if (--cx)
         goto loc_abdb;
@@ -15151,7 +15151,7 @@ void sub_abec() // 0947:177c
     di--;
     flags.direction = true;
 loc_ac08: // 0947:1798
-    rep_movsb<MemAuto, MemAuto, DirAuto>();
+    rep_movsb<MemData, MemData, DirForward>();
     ds = dx;
     assert(pop() == 0x7777);
     cs = pop();
@@ -15166,7 +15166,10 @@ void sub_ac0f() // 0947:179f
     cx = memoryAGet16(ss, bx + 6);
     al = memoryAGet(ss, bx + 4);
     flags.direction = false;
-    rep_stosb<MemAuto, DirAuto>();
+    if (es == 0xb800)
+        rep_stosb<MemVideo, DirForward>();
+    else
+        rep_stosb<MemData, DirForward>();
     assert(pop() == 0x7777);
     cs = pop();
     sp += 8;
